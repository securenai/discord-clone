[{"D:\\dev\\portfolio-projects\\discord-clone\\src\\index.js":"1","D:\\dev\\portfolio-projects\\discord-clone\\src\\serviceWorker.js":"2","D:\\dev\\portfolio-projects\\discord-clone\\src\\app\\store.js":"3","D:\\dev\\portfolio-projects\\discord-clone\\src\\firebase.js":"4","D:\\dev\\portfolio-projects\\discord-clone\\src\\features\\userSlice.js":"5","D:\\dev\\portfolio-projects\\discord-clone\\src\\features\\appSlice.js":"6","D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\App\\App.js":"7","D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\Chat\\Chat.js":"8","D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\Chat\\ChatHeader.js":"9","D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\Login\\Login.js":"10","D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\Sidebar\\Sidebar.js":"11","D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\Sidebar\\SidebarChannel.js":"12","D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\Message\\Message.js":"13","D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\Message\\MessageOptions.js":"14","D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\Chat\\ChatStartPoint.js":"15","D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\Channel\\Channel.js":"16","D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\ChannelSettings\\ChannelSettings.js":"17","D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\Message\\MessageEdit.js":"18","D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\Message\\MessageDelete.js":"19","D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\Message\\style.js":"20","D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\Login\\style.js":"21","D:\\dev\\portfolio-projects\\discord-clone\\src\\config.js":"22","D:\\dev\\portfolio-projects\\discord-clone\\src\\utils\\util.js":"23","D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\Chat\\ChatTextArea.js":"24","D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\Chat\\ChatMessages.js":"25","D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\Members\\Members.js":"26","D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\Members\\style.js":"27","D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\ChannelSettings\\Overview.js":"28","D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\ChannelSettings\\Permissions.js":"29","D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\ChannelSettings\\SlowmodeSlider.js":"30","D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\ChannelSettings\\CustomSwitch.js":"31","D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\Channel\\ChannelDelete.js":"32","D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\Channel\\style.js":"33","D:\\dev\\portfolio-projects\\discord-clone\\src\\features\\channelSlice.js":"34","D:\\dev\\portfolio-projects\\discord-clone\\src\\features\\messageSlice.js":"35","D:\\dev\\portfolio-projects\\discord-clone\\src\\features\\memberSlice.js":"36"},{"size":651,"mtime":1612014959551,"results":"37","hashOfConfig":"38"},{"size":5141,"mtime":1607507091218,"results":"39","hashOfConfig":"38"},{"size":659,"mtime":1613158684657,"results":"40","hashOfConfig":"38"},{"size":623,"mtime":1607692375366,"results":"41","hashOfConfig":"38"},{"size":949,"mtime":1612076878215,"results":"42","hashOfConfig":"38"},{"size":1222,"mtime":1613186437688,"results":"43","hashOfConfig":"38"},{"size":1056,"mtime":1612682557121,"results":"44","hashOfConfig":"38"},{"size":1284,"mtime":1613146503578,"results":"45","hashOfConfig":"38"},{"size":1319,"mtime":1613155001044,"results":"46","hashOfConfig":"38"},{"size":615,"mtime":1612096917469,"results":"47","hashOfConfig":"38"},{"size":3592,"mtime":1613190529802,"results":"48","hashOfConfig":"38"},{"size":2743,"mtime":1613191045888,"results":"49","hashOfConfig":"38"},{"size":3683,"mtime":1613146634288,"results":"50","hashOfConfig":"38"},{"size":1057,"mtime":1612080985991,"results":"51","hashOfConfig":"38"},{"size":888,"mtime":1611837655838,"results":"52","hashOfConfig":"38"},{"size":570,"mtime":1613190455845,"results":"53","hashOfConfig":"38"},{"size":3832,"mtime":1613190953536,"results":"54","hashOfConfig":"38"},{"size":1303,"mtime":1612535045413,"results":"55","hashOfConfig":"38"},{"size":2423,"mtime":1612518539568,"results":"56","hashOfConfig":"38"},{"size":3400,"mtime":1612713821377,"results":"57","hashOfConfig":"38"},{"size":404,"mtime":1612096652793,"results":"58","hashOfConfig":"38"},{"size":105,"mtime":1612323294184,"results":"59","hashOfConfig":"38"},{"size":2863,"mtime":1613141302227,"results":"60","hashOfConfig":"38"},{"size":2833,"mtime":1613141314688,"results":"61","hashOfConfig":"38"},{"size":986,"mtime":1612611422651,"results":"62","hashOfConfig":"38"},{"size":1097,"mtime":1613146481873,"results":"63","hashOfConfig":"38"},{"size":558,"mtime":1612708735413,"results":"64","hashOfConfig":"38"},{"size":2812,"mtime":1613141280227,"results":"65","hashOfConfig":"38"},{"size":127,"mtime":1612971438887,"results":"66","hashOfConfig":"38"},{"size":1542,"mtime":1613066940059,"results":"67","hashOfConfig":"38"},{"size":422,"mtime":1613110357000,"results":"68","hashOfConfig":"38"},{"size":2548,"mtime":1613155799354,"results":"69","hashOfConfig":"38"},{"size":1322,"mtime":1613112579438,"results":"70","hashOfConfig":"38"},{"size":1510,"mtime":1613150880246,"results":"71","hashOfConfig":"38"},{"size":874,"mtime":1613146237909,"results":"72","hashOfConfig":"38"},{"size":0,"mtime":1613146004752,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"12ab0db",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"D:\\dev\\portfolio-projects\\discord-clone\\src\\index.js",[],["152","153"],"D:\\dev\\portfolio-projects\\discord-clone\\src\\serviceWorker.js",[],"D:\\dev\\portfolio-projects\\discord-clone\\src\\app\\store.js",["154"],"import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport userReducer from '../features/userSlice';\r\nimport appReducer from '../features/appSlice';\r\nimport channelReducer from '../features/channelSlice';\r\nimport messageReducer from '../features/messageSlice';\r\nimport memberReducer from '../features/memberSlice';\r\n\r\n// const serializableMiddleware = getDefaultMiddleware({\r\n// \tserializableCheck: false\r\n// });\r\n\r\nexport default configureStore({\r\n\treducer: {\r\n\t\tuser: userReducer,\r\n\t\tapp: appReducer,\r\n\t\tchannel: channelReducer,\r\n\t\tmessage: messageReducer,\r\n\t\tmember: memberReducer\r\n\t} //,\r\n\t//middleware: serializableMiddleware\r\n});\r\n","D:\\dev\\portfolio-projects\\discord-clone\\src\\firebase.js",[],"D:\\dev\\portfolio-projects\\discord-clone\\src\\features\\userSlice.js",[],"D:\\dev\\portfolio-projects\\discord-clone\\src\\features\\appSlice.js",[],"D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\App\\App.js",[],"D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\Chat\\Chat.js",[],"D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\Chat\\ChatHeader.js",[],"D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\Login\\Login.js",[],"D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\Sidebar\\Sidebar.js",["155","156","157"],"import React, { useEffect, useState } from 'react';\r\nimport './Sidebar.css';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SideBarChannel from './SidebarChannel';\r\nimport SignalCellularAltIcon from '@material-ui/icons/SignalCellularAlt';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport { Avatar } from '@material-ui/core';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport HeadsetIcon from '@material-ui/icons/Headset';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectUser } from '../../features/userSlice';\r\nimport { selectChannels, setAppInfo } from '../../features/appSlice';\r\nimport db, { auth } from '../../firebase';\r\nimport firebase from 'firebase';\r\n\r\nconst Sidebar = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst user = useSelector(selectUser);\r\n\t// const channels = useSelector(selectChannels);\r\n\tconst [channels, setChannels] = useState([]);\r\n\r\n\t// useEffect(() => {\r\n\t// \tdb.collection('channels')\r\n\t// \t\t.orderBy('createdDateTime', 'asc')\r\n\t// \t\t.onSnapshot((snapshot) =>\r\n\t// \t\t\tdispatch(\r\n\t// \t\t\t\tsetAppInfo({\r\n\t// \t\t\t\t\tchannels: snapshot.docs.map((doc) => ({\r\n\t// \t\t\t\t\t\tid: doc.id,\r\n\t// \t\t\t\t\t\t// channel: doc.data()\r\n\t// \t\t\t\t\t\tchannel: {\r\n\t// \t\t\t\t\t\t\tchannelName: doc.data().channelName,\r\n\t// \t\t\t\t\t\t\tchannelTopic: doc.data().channelTopic,\r\n\t// \t\t\t\t\t\t\tslowmode: doc.data().slowmode,\r\n\t// \t\t\t\t\t\t\tnsfw: doc.data().nsfw\r\n\t// \t\t\t\t\t\t}\r\n\t// \t\t\t\t\t}))\r\n\t// \t\t\t\t})\r\n\t// \t\t\t)\r\n\t// \t\t);\r\n\t// }, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tdb.collection('channels')\r\n\t\t\t.orderBy('createdDateTime', 'asc')\r\n\t\t\t.onSnapshot((snapshot) =>\r\n\t\t\t\tsetChannels(\r\n\t\t\t\t\tsnapshot.docs.map((doc) => ({\r\n\t\t\t\t\t\tid: doc.id,\r\n\t\t\t\t\t\tchannel: doc.data()\r\n\t\t\t\t\t}))\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t}, []);\r\n\r\n\tconst handleAddChannel = () => {\r\n\t\tconst channelName = prompt('create channel name:');\r\n\t\tif (channelName) {\r\n\t\t\tdb.collection('channels').add({\r\n\t\t\t\tchannelName: channelName,\r\n\t\t\t\tchannelTopic: '',\r\n\t\t\t\tslowmode: 0,\r\n\t\t\t\tnsfw: false,\r\n\t\t\t\tcreatedDateTime: firebase.firestore.FieldValue.serverTimestamp()\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"sidebar\">\r\n\t\t\t<div className=\"sidebar__top\">\r\n\t\t\t\t<h4>Nova's Lab</h4>\r\n\t\t\t\t<ExpandMoreIcon />\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"sidebar__channels\">\r\n\t\t\t\t<div className=\"sidebar__channelsHeader\">\r\n\t\t\t\t\t<div className=\"sidebar__header\">\r\n\t\t\t\t\t\t<ExpandMoreIcon />\r\n\t\t\t\t\t\t<h4>Text channels</h4>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<AddIcon onClick={handleAddChannel} className=\"sidebar__addChannel\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"sidebar__channelsList\">\r\n\t\t\t\t\t{channels.map(({ id, channel }) => (\r\n\t\t\t\t\t\t<SideBarChannel key={id} id={id} channelData={channel} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"sidebar__voice\">\r\n\t\t\t\t<SignalCellularAltIcon\r\n\t\t\t\t\tclassName=\"sidebar__voiceIcon\"\r\n\t\t\t\t\tfontSize=\"large\"\r\n\t\t\t\t/>\r\n\t\t\t\t<div className=\"sidebar__voiceInfo\">\r\n\t\t\t\t\t<h3>voice connected</h3>\r\n\t\t\t\t\t<p>Stream</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"sidebar__voiceIcons\">\r\n\t\t\t\t\t<InfoOutlinedIcon />\r\n\t\t\t\t\t<CallIcon />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"sidebar__profile\">\r\n\t\t\t\t<Avatar onClick={() => auth.signOut()} src={user.photo} />\r\n\t\t\t\t<div className=\"sidebar__profileInfo\">\r\n\t\t\t\t\t<h3>{user.displayName}</h3>\r\n\t\t\t\t\t<p>#{user.uid.substring(0, 4)}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"sidebar__profileIcons\">\r\n\t\t\t\t\t<MicIcon />\r\n\t\t\t\t\t<HeadsetIcon />\r\n\t\t\t\t\t<SettingsIcon />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Sidebar;\r\n","D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\Sidebar\\SidebarChannel.js",["158","159","160","161"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setChannelInfo } from '../../features/channelSlice';\r\nimport './SidebarChannel.css';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n\tselectChannelId,\r\n\tselectChannelName,\r\n\tselectCurrChannelConfiguring\r\n} from '../../features/channelSlice';\r\nimport { selectOpenChannelSettings, setAppInfo } from '../../features/appSlice';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ChannelSettings from '../ChannelSettings/ChannelSettings';\r\n\r\nconst SideBarChannel = ({ id, channelData }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst channelId = useSelector(selectChannelId);\r\n\tconst channelName = useSelector(selectChannelName);\r\n\tconst currChannelConfiguring = useSelector(selectCurrChannelConfiguring);\r\n\t// const openChannelSettings = useSelector(selectOpenChannelSettings);\r\n\tconst [openChannelSettings, setOpenChannelSettings] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem('lastVisitedChannelId', channelId);\r\n\t});\r\n\r\n\tconst handleClickOpenSettings = (e) => {\r\n\t\te.stopPropagation();\r\n\t\tsetOpenChannelSettings(true);\r\n\t\t// dispatch(setAppInfo({ openChannelSettings: true }));\r\n\r\n\t\t// dispatch(\r\n\t\t// \tsetChannelInfo({\r\n\t\t// \t\tchannelId: channelId,\r\n\t\t// \t\tchannelName: channelName,\r\n\t\t// \t\tcurrChannelConfiguring: id\r\n\t\t// \t})\r\n\t\t// );\r\n\t};\r\n\r\n\tconst handleCloseSettings = (e) => {\r\n\t\te.stopPropagation();\r\n\t\tsetOpenChannelSettings(false);\r\n\t\t// dispatch(\r\n\t\t// \tsetChannelInfo({\r\n\t\t// \t\tchannelId: channelId,\r\n\t\t// \t\tchannelName: channelName,\r\n\t\t// \t\tcurrChannelConfiguring: null\r\n\t\t// \t})\r\n\t\t// );\r\n\t\t// dispatch(setAppInfo({ openChannelSettings: false }));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div\r\n\t\t\t\tclassName={\r\n\t\t\t\t\tchannelId === id ? 'sidebarChannel sidebarCurr' : 'sidebarChannel'\r\n\t\t\t\t}\r\n\t\t\t\tonClick={() =>\r\n\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\tsetChannelInfo({\r\n\t\t\t\t\t\t\tchannelId: id,\r\n\t\t\t\t\t\t\tchannelName: channelData.channelName,\r\n\t\t\t\t\t\t\tcurrChannelConfiguring: null\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t)\r\n\t\t\t\t}>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={\r\n\t\t\t\t\t\tchannelId === id ? 'curr_channel' : 'sidebarChannel__wrap'\r\n\t\t\t\t\t}>\r\n\t\t\t\t\t<span className=\"sidebarChannel__hash\">#</span>\r\n\t\t\t\t\t<span className=\"sidebarChannel__name\">\r\n\t\t\t\t\t\t{channelData.channelName}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span className=\"sidebar__channelIcons\">\r\n\t\t\t\t\t\t<SettingsIcon onClick={handleClickOpenSettings} />\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div>\r\n\t\t\t\t{openChannelSettings === true ? (\r\n\t\t\t\t\t<ChannelSettings\r\n\t\t\t\t\t\t// isOpen={openChannelSettings}\r\n\t\t\t\t\t\t// checked={true}\r\n\t\t\t\t\t\tchannelData={channelData}\r\n\t\t\t\t\t\tchannelId={id}\r\n\t\t\t\t\t\tcloseSettings={handleCloseSettings}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : null}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default SideBarChannel;\r\n","D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\Message\\Message.js",[],"D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\Message\\MessageOptions.js",[],"D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\Chat\\ChatStartPoint.js",[],"D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\Channel\\Channel.js",[],"D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\ChannelSettings\\ChannelSettings.js",[],"D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\Message\\MessageEdit.js",[],"D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\Message\\MessageDelete.js",[],"D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\Message\\style.js",[],"D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\Login\\style.js",[],"D:\\dev\\portfolio-projects\\discord-clone\\src\\config.js",[],"D:\\dev\\portfolio-projects\\discord-clone\\src\\utils\\util.js",["162"],"import firebase from 'firebase';\r\n\r\nexport const timeStampConversion = (timestamp) => {\r\n\tconst isToday =\r\n\t\tnew Date().toDateString() === timestamp.toDate().toDateString();\r\n\tconst d2 = new Date();\r\n\td2.setDate(d2.getDate() - 1);\r\n\tconst isYest = d2.toDateString() === timestamp.toDate().toDateString();\r\n\tconst d = new Date(timestamp?.toDate()).toLocaleString();\r\n\tconst arr = d.split(' ');\r\n\tif (isToday) {\r\n\t\treturn `今天 ${arr[1]}`;\r\n\t} else if (isYest) {\r\n\t\treturn `昨天 ${arr[1]}`;\r\n\t}\r\n\treturn arr[0];\r\n};\r\n\r\nexport const rtdb_and_local_fs_presence = (authUser) => {\r\n\t// var uid = firebase.auth().currentUser.uid;\r\n\tvar userStatusDatabaseRef = firebase.database().ref('/users/' + authUser.uid);\r\n\r\n\tvar isOfflineForDatabase = {\r\n\t\tuid: authUser.uid,\r\n\t\tphoto: authUser.photoURL,\r\n\t\temail: authUser.email,\r\n\t\tdisplayName: authUser.displayName,\r\n\t\tstate: 'offline',\r\n\t\tlast_changed: firebase.database.ServerValue.TIMESTAMP\r\n\t};\r\n\r\n\tvar isOnlineForDatabase = {\r\n\t\tuid: authUser.uid,\r\n\t\tphoto: authUser.photoURL,\r\n\t\temail: authUser.email,\r\n\t\tdisplayName: authUser.displayName,\r\n\t\tstate: 'online',\r\n\t\tlast_changed: firebase.database.ServerValue.TIMESTAMP\r\n\t};\r\n\r\n\t// [END_EXCLUDE]\r\n\tvar userStatusFirestoreRef = firebase\r\n\t\t.firestore()\r\n\t\t.doc('/users/' + authUser.uid);\r\n\r\n\t// Firestore uses a different server timestamp value, so we'll\r\n\t// create two more constants for Firestore state.\r\n\tvar isOfflineForFirestore = {\r\n\t\tuid: authUser.uid,\r\n\t\tphoto: authUser.photoURL,\r\n\t\temail: authUser.email,\r\n\t\tdisplayName: authUser.displayName,\r\n\t\tstate: 'offline',\r\n\t\tlast_changed: firebase.firestore.FieldValue.serverTimestamp()\r\n\t};\r\n\r\n\tvar isOnlineForFirestore = {\r\n\t\tuid: authUser.uid,\r\n\t\tphoto: authUser.photoURL,\r\n\t\temail: authUser.email,\r\n\t\tdisplayName: authUser.displayName,\r\n\t\tstate: 'online',\r\n\t\tlast_changed: firebase.firestore.FieldValue.serverTimestamp()\r\n\t};\r\n\r\n\tfirebase\r\n\t\t.database()\r\n\t\t.ref('.info/connected')\r\n\t\t.on('value', function (snapshot) {\r\n\t\t\tif (snapshot.val() === false) {\r\n\t\t\t\t// Instead of simply returning, we'll also set Firestore's state\r\n\t\t\t\t// to 'offline'. This ensures that our Firestore cache is aware\r\n\t\t\t\t// of the switch to 'offline.'\r\n\t\t\t\tuserStatusFirestoreRef.set(isOfflineForFirestore);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tuserStatusDatabaseRef\r\n\t\t\t\t.onDisconnect()\r\n\t\t\t\t.set(isOfflineForDatabase)\r\n\t\t\t\t.then(function () {\r\n\t\t\t\t\tuserStatusDatabaseRef.set(isOnlineForDatabase);\r\n\r\n\t\t\t\t\t// We'll also add Firestore set here for when we come online.\r\n\t\t\t\t\tuserStatusFirestoreRef.set(isOnlineForFirestore);\r\n\t\t\t\t});\r\n\t\t});\r\n};\r\n\r\nexport const fs_listen = (uid) => {\r\n\tvar userStatusFirestoreRef = firebase.firestore().doc('/users/' + uid);\r\n\tif (userStatusFirestoreRef) {\r\n\t\tuserStatusFirestoreRef.onSnapshot(function (doc) {\r\n\t\t\tif (doc.data() === null) {\r\n\t\t\t\tvar isOnline = doc.data().state === 'online';\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n};\r\n","D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\Chat\\ChatTextArea.js",[],"D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\Chat\\ChatMessages.js",[],"D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\Members\\Members.js",[],"D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\Members\\style.js",[],"D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\ChannelSettings\\Overview.js",[],"D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\ChannelSettings\\Permissions.js",[],"D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\ChannelSettings\\SlowmodeSlider.js",[],["163","164"],"D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\ChannelSettings\\CustomSwitch.js",[],"D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\Channel\\ChannelDelete.js",[],"D:\\dev\\portfolio-projects\\discord-clone\\src\\components\\Channel\\style.js",[],"D:\\dev\\portfolio-projects\\discord-clone\\src\\features\\channelSlice.js",[],"D:\\dev\\portfolio-projects\\discord-clone\\src\\features\\messageSlice.js",[],"D:\\dev\\portfolio-projects\\discord-clone\\src\\features\\memberSlice.js",[],{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":1,"column":26,"nodeType":"171","messageId":"172","endLine":1,"endColumn":46},{"ruleId":"169","severity":1,"message":"173","line":15,"column":10,"nodeType":"171","messageId":"172","endLine":15,"endColumn":24},{"ruleId":"169","severity":1,"message":"174","line":15,"column":26,"nodeType":"171","messageId":"172","endLine":15,"endColumn":36},{"ruleId":"169","severity":1,"message":"175","line":20,"column":8,"nodeType":"171","messageId":"172","endLine":20,"endColumn":16},{"ruleId":"169","severity":1,"message":"176","line":11,"column":10,"nodeType":"171","messageId":"172","endLine":11,"endColumn":35},{"ruleId":"169","severity":1,"message":"174","line":11,"column":37,"nodeType":"171","messageId":"172","endLine":11,"endColumn":47},{"ruleId":"169","severity":1,"message":"177","line":18,"column":8,"nodeType":"171","messageId":"172","endLine":18,"endColumn":19},{"ruleId":"169","severity":1,"message":"178","line":19,"column":8,"nodeType":"171","messageId":"172","endLine":19,"endColumn":30},{"ruleId":"169","severity":1,"message":"179","line":95,"column":9,"nodeType":"171","messageId":"172","endLine":95,"endColumn":17},{"ruleId":"165","replacedBy":"180"},{"ruleId":"167","replacedBy":"181"},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],"no-unused-vars","'getDefaultMiddleware' is defined but never used.","Identifier","unusedVar","'selectChannels' is defined but never used.","'setAppInfo' is defined but never used.","'dispatch' is assigned a value but never used.","'selectOpenChannelSettings' is defined but never used.","'channelName' is assigned a value but never used.","'currChannelConfiguring' is assigned a value but never used.","'isOnline' is assigned a value but never used.",["182"],["183"],"no-global-assign","no-unsafe-negation"]